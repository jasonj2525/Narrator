# Playbook for helping to deploy Tendermint
---
- name: Ensure service group exists
  group:
    name: "{{ service_group }}"
    state: present

- name: Ensure service user exists
  user:
    name: "{{ service_user }}"
    shell: "{{ service_user_shell }}"
    home: "/root"
    group: "{{ service_group }}"

- name: Sync the service binary across to the server
  copy:
    src: "{{ src_binary }}"
    dest: "{{ dest_binary }}"

- name: Ensure correct service binary permissions
  file:
    path: "{{ dest_binary }}"
    mode: 777
    owner: "root"
    group: "root"

- name: Delete any existing Tendermint configuration/data
  file: "path=/{{ service_user }}/.tendermint state=absent"
  when: copy_node_config == True

- name: Optionally truncate Tendermint logs
  copy: content='' dest=/var/log/tendermint.log
  when: truncate_logs == True

- name: Restart rsyslog if Tendermint logs were truncated
  service: name=rsyslog state=restarted
  when: truncate_logs == True

- name: Copy the Tendermint node configuration across
  copy:
    src: "{{ src_config_path }}/{{ node_id }}/"
    dest: "/root/.tendermint/"
  when: copy_node_config == True

- name: Ensure the service user owns the Tendermint home directory
  file:
    path: "/root/.tendermint/"
    recurse: yes
    owner: "{{ service_user }}"
    group: "{{ service_group }}"

- name: Ensure systemd service is present
  template:
    src: "{{ service_template }}"
    dest: "/etc/systemd/system/{{ service_name }}.service"

- name: Reload systemd
  systemd: daemon_reload=yes

- name: Set service to required state
  service: "name={{ service_name }} state={{ service_state }}"
