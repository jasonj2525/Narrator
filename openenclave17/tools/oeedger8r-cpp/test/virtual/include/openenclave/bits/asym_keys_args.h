/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_ASYM_KEYS_ARGS_H
#define EDGER8R_ASYM_KEYS_ARGS_H

#include <openenclave/bits/result.h>

/**** User includes. ****/
/* There were no user includes. */

/**** User defined types in EDL. ****/
#ifndef EDGER8R_ENUM_OE_ASYMMETRIC_KEY_TYPE_T
#define EDGER8R_ENUM_OE_ASYMMETRIC_KEY_TYPE_T
typedef enum oe_asymmetric_key_type_t
{
    OE_ASYMMETRIC_KEY_EC_SECP256P1 = 1,
    _OE_ASYMMETRIC_KEY_TYPE_MAX = OE_ENUM_MAX
} oe_asymmetric_key_type_t;
#endif

#ifndef EDGER8R_ENUM_OE_ASYMMETRIC_KEY_FORMAT_T
#define EDGER8R_ENUM_OE_ASYMMETRIC_KEY_FORMAT_T
typedef enum oe_asymmetric_key_format_t
{
    OE_ASYMMETRIC_KEY_PEM = 1,
    _OE_ASYMMETRIC_KEY_FORMAT_MAX = OE_ENUM_MAX
} oe_asymmetric_key_format_t;
#endif

#ifndef EDGER8R_STRUCT_OE_ASYMMETRIC_KEY_PARAMS_T
#define EDGER8R_STRUCT_OE_ASYMMETRIC_KEY_PARAMS_T
typedef struct oe_asymmetric_key_params_t
{
    oe_asymmetric_key_type_t type;
    oe_asymmetric_key_format_t format;
    void* user_data;
    size_t user_data_size;
} oe_asymmetric_key_params_t;
#endif

#endif // EDGER8R_ASYM_KEYS_ARGS_H
